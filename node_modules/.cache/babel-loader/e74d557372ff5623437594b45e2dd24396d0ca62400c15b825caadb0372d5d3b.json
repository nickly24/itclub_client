{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/itclub_client/src/modules/MetroStationsSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetroStationsSelector = ({\n  selectedStation,\n  setSelectedStation\n}) => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour']\n      }));\n      setStations(stations);\n    };\n    fetchStations();\n  }, []);\n  const filteredStations = stations.filter(station => station.name.toLowerCase().includes(searchText.toLowerCase()));\n  const handleStationSelect = station => {\n    setSelectedStation({\n      name: station.name,\n      color: station.color\n    });\n    setSearchText(station.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0421\\u0442\\u0430\\u043D\\u0446\\u0438\\u044F \\u043C\\u0435\\u0442\\u0440\\u043E:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchText,\n        onChange: e => setSearchText(e.target.value),\n        style: {\n          width: '300px',\n          padding: '8px',\n          fontSize: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), searchText && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0,\n        margin: 0,\n        maxHeight: '200px',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        borderRadius: '4px'\n      },\n      children: filteredStations.map(station => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleStationSelect(station),\n        style: {\n          padding: '8px',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            width: '12px',\n            height: '12px',\n            borderRadius: '50%',\n            backgroundColor: station.color,\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), station.name]\n      }, station.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MetroStationsSelector, \"nMphxNnNMsHJN7dieGMp2ufsPmw=\");\n_c = MetroStationsSelector;\nexport default MetroStationsSelector;\nvar _c;\n$RefreshReg$(_c, \"MetroStationsSelector\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MetroStationsSelector","selectedStation","setSelectedStation","_s","stations","setStations","searchText","setSearchText","fetchStations","response","fetch","method","body","data","json","elements","map","element","id","name","tags","line","color","filteredStations","filter","station","toLowerCase","includes","handleStationSelect","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","width","padding","fontSize","listStyleType","margin","maxHeight","overflowY","border","borderRadius","onClick","cursor","display","alignItems","height","backgroundColor","marginRight","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/itclub_client/src/modules/MetroStationsSelector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst MetroStationsSelector = ({ selectedStation, setSelectedStation }) => {\n  const [stations, setStations] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `,\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour'],\n      }));\n      setStations(stations);\n    };\n\n    fetchStations();\n  }, []);\n\n  const filteredStations = stations.filter(station =>\n    station.name.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  const handleStationSelect = (station) => {\n    setSelectedStation({ name: station.name, color: station.color });\n    setSearchText(station.name);\n  };\n\n  return (\n    <div>\n      <label>\n        Станция метро:<br/>\n        <input\n          type=\"text\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          style={{ width: '300px', padding: '8px', fontSize: '16px' }}\n        />\n      </label>\n      {searchText && (\n        <ul style={{ listStyleType: 'none', padding: 0, margin: 0, maxHeight: '200px', overflowY: 'auto', border: '1px solid #ccc', borderRadius: '4px' }}>\n          {filteredStations.map(station => (\n            <li\n              key={station.id}\n              onClick={() => handleStationSelect(station)}\n              style={{ padding: '8px', cursor: 'pointer', display: 'flex', alignItems: 'center' }}\n            >\n              <span\n                style={{\n                  display: 'inline-block',\n                  width: '12px',\n                  height: '12px',\n                  borderRadius: '50%',\n                  backgroundColor: station.color,\n                  marginRight: '8px'\n                }}\n              ></span>\n              {station.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MetroStationsSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}