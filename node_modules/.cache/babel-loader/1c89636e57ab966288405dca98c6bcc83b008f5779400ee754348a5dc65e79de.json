{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/itclub_client/src/dnevnik/Modules/Dnevnik.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MonthSelector from './MonthSelector';\nimport FilialCard from './FilialCard';\nimport { API_BASE_URL } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dnevnik() {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [filials, setFilials] = useState([]);\n  const [attendanceData, setAttendanceData] = useState({});\n  const [prepods, setPrepods] = useState([]);\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/filials`).then(response => {\n      setFilials(response.data);\n    }).catch(error => {\n      console.error('Ошибка при получении филиалов:', error);\n    });\n    axios.get(`${API_BASE_URL}/prepods`).then(response => {\n      setPrepods(response.data);\n    }).catch(error => {\n      console.error('Ошибка при получении списка преподавателей:', error);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedMonth) {\n      fetchAttendanceData();\n    }\n  }, [selectedMonth]);\n  const fetchAttendanceData = () => {\n    const [year, month] = selectedMonth.split('-');\n    axios.get(`${API_BASE_URL}/dnevnik/${year}/${month}`).then(response => {\n      const groupedData = response.data.reduce((acc, record) => {\n        if (!acc[record.filial_name]) {\n          acc[record.filial_name] = [];\n        }\n        acc[record.filial_name].push(record);\n        return acc;\n      }, {});\n      setAttendanceData(groupedData);\n    }).catch(error => {\n      console.error('Ошибка при получении данных посещаемости:', error);\n    });\n  };\n  const addAttendance = (filialId, newAttendance, pricePerSession) => {\n    return axios.post(`${API_BASE_URL}/dnevnik`, {\n      filial_id: filialId,\n      date: newAttendance.date,\n      number_of_children: newAttendance.number_of_children,\n      price_per_session: pricePerSession,\n      prepod_id: newAttendance.prepod_id\n    }).then(response => {\n      fetchAttendanceData();\n    }).catch(error => {\n      console.error('Ошибка при добавлении записи о посещаемости:', error);\n      throw error; // Проброс ошибки для обработки в handleAddSubmit\n    });\n  };\n  const editAttendance = (filialId, attendanceId, updatedAttendance, pricePerSession) => {\n    return axios.put(`${API_BASE_URL}/dnevnik/${attendanceId}`, {\n      filial_id: filialId,\n      date: updatedAttendance.date,\n      number_of_children: updatedAttendance.number_of_children,\n      price_per_session: pricePerSession,\n      // Используем pricePerSession, переданный в функцию\n      prepod_id: updatedAttendance.prepod_id\n    }).then(() => {\n      fetchAttendanceData();\n    }).catch(error => {\n      console.error('Ошибка при редактировании записи о посещаемости:', error);\n      throw error; // Проброс ошибки для обработки в handleEditSubmit\n    });\n  };\n  const deleteAttendance = (filialId, attendanceId) => {\n    return axios.delete(`${API_BASE_URL}/dnevnik/${attendanceId}`).then(() => {\n      fetchAttendanceData();\n    }).catch(error => {\n      console.error('Ошибка при удалении записи о посещаемости:', error);\n      throw error; // Проброс ошибки для обработки в handleDeleteSubmit\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card_main pd20\",\n    children: [/*#__PURE__*/_jsxDEV(MonthSelector, {\n      selectedMonth: selectedMonth,\n      setSelectedMonth: setSelectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filials mt20\",\n      children: filials.map(filial => /*#__PURE__*/_jsxDEV(FilialCard, {\n        filial: filial,\n        attendance: attendanceData[filial.name] || [],\n        addAttendance: addAttendance,\n        editAttendance: editAttendance,\n        deleteAttendance: deleteAttendance,\n        prepods: prepods\n      }, filial.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Dnevnik, \"61A35IO/ILagBsK8qS0t5AKD6Xw=\");\n_c = Dnevnik;\n;\nvar _c;\n$RefreshReg$(_c, \"Dnevnik\");","map":{"version":3,"names":["React","useState","useEffect","axios","MonthSelector","FilialCard","API_BASE_URL","jsxDEV","_jsxDEV","Dnevnik","_s","selectedMonth","setSelectedMonth","filials","setFilials","attendanceData","setAttendanceData","prepods","setPrepods","get","then","response","data","catch","error","console","fetchAttendanceData","year","month","split","groupedData","reduce","acc","record","filial_name","push","addAttendance","filialId","newAttendance","pricePerSession","post","filial_id","date","number_of_children","price_per_session","prepod_id","editAttendance","attendanceId","updatedAttendance","put","deleteAttendance","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filial","attendance","name","id","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/itclub_client/src/dnevnik/Modules/Dnevnik.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MonthSelector from './MonthSelector';\nimport FilialCard from './FilialCard';\nimport {API_BASE_URL} from'./Api';\n\nexport default function Dnevnik() {\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [filials, setFilials] = useState([]);\n  const [attendanceData, setAttendanceData] = useState({});\n  const [prepods, setPrepods] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/filials`)\n      .then(response => {\n        setFilials(response.data);\n      })\n      .catch(error => {\n        console.error('Ошибка при получении филиалов:', error);\n      });\n\n    axios.get(`${API_BASE_URL}/prepods`)\n      .then(response => {\n        setPrepods(response.data);\n      })\n      .catch(error => {\n        console.error('Ошибка при получении списка преподавателей:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectedMonth) {\n      fetchAttendanceData();\n    }\n  }, [selectedMonth]);\n\n  const fetchAttendanceData = () => {\n    const [year, month] = selectedMonth.split('-');\n    axios.get(`${API_BASE_URL}/dnevnik/${year}/${month}`)\n      .then(response => {\n        const groupedData = response.data.reduce((acc, record) => {\n          if (!acc[record.filial_name]) {\n            acc[record.filial_name] = [];\n          }\n          acc[record.filial_name].push(record);\n          return acc;\n        }, {});\n        setAttendanceData(groupedData);\n      })\n      .catch(error => {\n        console.error('Ошибка при получении данных посещаемости:', error);\n      });\n  };\n\n  const addAttendance = (filialId, newAttendance, pricePerSession) => {\n    return axios.post(`${API_BASE_URL}/dnevnik`, {\n      filial_id: filialId,\n      date: newAttendance.date,\n      number_of_children: newAttendance.number_of_children,\n      price_per_session: pricePerSession,\n      prepod_id: newAttendance.prepod_id\n    })\n    .then(response => {\n      fetchAttendanceData();\n    })\n    .catch(error => {\n      console.error('Ошибка при добавлении записи о посещаемости:', error);\n      throw error; // Проброс ошибки для обработки в handleAddSubmit\n    });\n  };\n\n  const editAttendance = (filialId, attendanceId, updatedAttendance, pricePerSession) => {\n    return axios.put(`${API_BASE_URL}/dnevnik/${attendanceId}`, {\n      filial_id: filialId,\n      date: updatedAttendance.date,\n      number_of_children: updatedAttendance.number_of_children,\n      price_per_session: pricePerSession, // Используем pricePerSession, переданный в функцию\n      prepod_id: updatedAttendance.prepod_id\n    })\n    .then(() => {\n      fetchAttendanceData();\n    })\n    .catch(error => {\n      console.error('Ошибка при редактировании записи о посещаемости:', error);\n      throw error; // Проброс ошибки для обработки в handleEditSubmit\n    });\n  };\n\n  const deleteAttendance = (filialId, attendanceId) => {\n    return axios.delete(`${API_BASE_URL}/dnevnik/${attendanceId}`)\n    .then(() => {\n      fetchAttendanceData();\n    })\n    .catch(error => {\n      console.error('Ошибка при удалении записи о посещаемости:', error);\n      throw error; // Проброс ошибки для обработки в handleDeleteSubmit\n    });\n  };\n\n  return (\n    <div className='card_main pd20'>\n      <MonthSelector selectedMonth={selectedMonth} setSelectedMonth={setSelectedMonth} />\n      <div className=\"filials mt20\">\n        {filials.map(filial => (\n          <FilialCard\n            key={filial.id}\n            filial={filial}\n            attendance={attendanceData[filial.name] || []}\n            addAttendance={addAttendance}\n            editAttendance={editAttendance}\n            deleteAttendance={deleteAttendance}\n            prepods={prepods}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}