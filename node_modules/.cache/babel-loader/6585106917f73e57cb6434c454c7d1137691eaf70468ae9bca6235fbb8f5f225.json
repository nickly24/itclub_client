{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/itclub_client/src/analytics/AnalyticsTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = {\n  '01': 'Январь',\n  '02': 'Февраль',\n  '03': 'Март',\n  '04': 'Апрель',\n  '05': 'Май',\n  '06': 'Июнь',\n  '07': 'Июль',\n  '08': 'Август',\n  '09': 'Сентябрь',\n  '10': 'Октябрь',\n  '11': 'Ноябрь',\n  '12': 'Декабрь'\n};\nconst AnalyticsTable = ({\n  data\n}) => {\n  const calculateTotals = data => {\n    return data.map(monthData => {\n      const revenue = monthData.records.reduce((sum, record) => sum + record.number_of_children * record.price_per_session, 0);\n      const commission = revenue * 0.075;\n      const teacherPayments = monthData.records.reduce((sum, record) => {\n        const children = record.number_of_children;\n        let payment = 1000;\n        if (children > 4 && children < 10) {\n          payment += (children - 4) * 100;\n        } else if (children >= 10) {\n          payment = 2000;\n        }\n        return sum + payment;\n      }, 0);\n      const profit = revenue - commission - teacherPayments;\n      const shareholderProfit = profit / 3;\n      return {\n        month: monthData.month,\n        revenue,\n        commission,\n        teacherPayments,\n        profit,\n        shareholderProfit\n      };\n    });\n  };\n  const totals = calculateTotals(data);\n  console.log('Table Data:', totals); // Логирование данных таблицы\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"analytic_table mt20\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"table_comp\",\n          children: \"\\u041C\\u0435\\u0441\\u044F\\u0446\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"table_comp\",\n          children: \"\\u0412\\u044B\\u0440\\u0443\\u0447\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"table_comp\",\n          children: \"\\u041A\\u043E\\u043C\\u0438\\u0441\\u0441\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"table_comp\",\n          children: \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430 \\u043F\\u0440\\u0435\\u043F\\u043E\\u0434\\u0430\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"table_comp\",\n          children: \"\\u041F\\u0440\\u0438\\u0431\\u044B\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"table_comp\",\n          children: \"\\u041F\\u0440\\u0438\\u0431\\u044B\\u043B\\u044C \\u043D\\u0430 \\u043A\\u0430\\u0436\\u0434\\u043E\\u0433\\u043E \\u0430\\u043A\\u0446\\u0438\\u043E\\u043D\\u0435\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: totals.map((total, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"table_comp\",\n          children: monthNames[total.month.split('-')[1]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"table_comp\",\n          children: total.revenue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"table_comp\",\n          children: total.commission\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"table_comp\",\n          children: total.teacherPayments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"table_comp\",\n          children: total.profit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"table_comp\",\n          children: parseInt(total.shareholderProfit)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = AnalyticsTable;\nexport default AnalyticsTable;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","monthNames","AnalyticsTable","data","calculateTotals","map","monthData","revenue","records","reduce","sum","record","number_of_children","price_per_session","commission","teacherPayments","children","payment","profit","shareholderProfit","month","totals","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","total","index","split","parseInt","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/itclub_client/src/analytics/AnalyticsTable.js"],"sourcesContent":["import React from 'react';\n\nconst monthNames = {\n  '01': 'Январь',\n  '02': 'Февраль',\n  '03': 'Март',\n  '04': 'Апрель',\n  '05': 'Май',\n  '06': 'Июнь',\n  '07': 'Июль',\n  '08': 'Август',\n  '09': 'Сентябрь',\n  '10': 'Октябрь',\n  '11': 'Ноябрь',\n  '12': 'Декабрь',\n};\n\nconst AnalyticsTable = ({ data }) => {\n  const calculateTotals = (data) => {\n    return data.map(monthData => {\n      const revenue = monthData.records.reduce((sum, record) => sum + record.number_of_children * record.price_per_session, 0);\n      const commission = revenue * 0.075;\n      const teacherPayments = monthData.records.reduce((sum, record) => {\n        const children = record.number_of_children;\n        let payment = 1000;\n        if (children > 4 && children < 10) {\n          payment += (children - 4) * 100;\n        } else if (children >= 10) {\n          payment = 2000;\n        }\n        return sum + payment;\n      }, 0);\n      const profit = revenue - commission - teacherPayments;\n      const shareholderProfit = profit / 3;\n\n      return {\n        month: monthData.month,\n        revenue,\n        commission,\n        teacherPayments,\n        profit,\n        shareholderProfit,\n      };\n    });\n  };\n\n  const totals = calculateTotals(data);\n  console.log('Table Data:', totals); // Логирование данных таблицы\n\n  return (\n    <table className='analytic_table mt20'>\n      <thead>\n        <tr>\n          <th className='table_comp'>Месяц</th>\n          <th className='table_comp'>Выручка</th>\n          <th className='table_comp'>Комиссия</th>\n          <th className='table_comp'>Оплата преподавателям</th>\n          <th className='table_comp'>Прибыль</th>\n          <th className='table_comp'>Прибыль на каждого акционера</th>\n        </tr>\n      </thead>\n      <tbody>\n        {totals.map((total, index) => (\n          <tr key={index}>\n            <td className='table_comp'>{monthNames[total.month.split('-')[1]]}</td>\n            <td className='table_comp'>{total.revenue}</td>\n            <td className='table_comp'>{total.commission}</td>\n            <td className='table_comp'>{total.teacherPayments}</td>\n            <td className='table_comp'>{total.profit}</td>\n            <td className='table_comp'>{parseInt(total.shareholderProfit)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default AnalyticsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}